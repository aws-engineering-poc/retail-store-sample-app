name: Checkout CI

on:
  push:
    branches:
    - main
    paths:
    - 'src/checkout/**'
  pull_request:
    branches:
    - main
    paths:
    - 'src/checkout/**'
    - 'images/**'
  workflow_dispatch:

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Nodejs
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Run CI script
      run: |
        bash src/checkout/scripts/ci.sh

    - name: Build image
      uses: mamezou-tech/buildpacks-action@master
      with:
        image: 'checkout-app'
        tag: '${{github.sha}}'
        path: 'src/checkout'
        builder: 'gcr.io/paketo-buildpacks/builder:base'
        env: 'JAVA_OPTS=-XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom'

    - name: Scan Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'checkout-app:${{github.sha}}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: false
        vuln-type: 'os,library'
        severity: 'LOW'   

    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        image: 'checkout-app:${{github.sha}}' 

    - name: publish artifact
      uses: anchore/sbom-action/publish-sbom@v0
      with:
        sbom-artifact-match: ".*\\.spdx$"          
        
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.1.1
      with:
        cosign-release: main     
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1         

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public      

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: "public.ecr.aws/b6s1t7h8"
        REPOSITORY: checkout
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker images
        docker tag checkout-app:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG    